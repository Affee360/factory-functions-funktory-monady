{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","webpackCompilationHash":"0aa6eb790f442a8c0377","result":{"data":{"deck":{"id":"b661594a-2036-51f4-9b8f-1f0f63e8b70d","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = nightOwl;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Factory Functions, functor, monad\"), mdx(\"link\", {\n    rel: \"icon\",\n    type: \"image/x-icon\",\n    href: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/favicon.ico\"\n  })), mdx(\"h1\", null, \"Cze\\u015B\\u0107 \\uD83D\\uDC4B\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Programowanie funkcyjne w JavaScript, czyli czym s\\u0105 Factory Functions, funktory i monady.\"), mdx(\"hr\", null), mdx(\"h1\", null, \"O mnie\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FullStack developer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"MERN Stack + typescript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lubie gra\\u0107 na perkusji\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mam Kota Gibcia \\u2764\\uFE0F\")), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class PieceOfCake {\\n  bake() {}\\n  decorate() {}\\n  cut() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class PieceOfCake {\\n  bake() {}\\n  decorate() {}\\n  cut() {}\\n}\\n\\nclass Muffin {\\n  bake() {}\\n  decorate() {}\\n  heatUp() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Przydało by się użyć zasady Don't Repeat Yourself\\\" showNumbers 1:11\",\n    \"title\": \"\\\"Przydało\",\n    \"by\": true,\n    \"się\": true,\n    \"użyć\": true,\n    \"zasady\": true,\n    \"Don't\": true,\n    \"Repeat\": true,\n    \"Yourself\\\"\": true,\n    \"showNumbers\": true,\n    \"1:11\": true\n  }), \"class PieceOfCake {\\n  bake() {}\\n  decorate() {}\\n  cut() {}\\n}\\n\\nclass Muffin {\\n  bake() {}\\n  decorate() {}\\n  heatUp() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers 1:4\",\n    \"showNumbers\": true,\n    \"1:4\": true\n  }), \"class Baking {\\n  bake() {}\\n  decorate() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"inheritance\\\" showNumbers\",\n    \"title\": \"\\\"inheritance\\\"\",\n    \"showNumbers\": true\n  }), \"class Baking {\\n  bake() {}\\n  decorate() {}\\n}\\n\\nclass PieceOfCake extends Baking {\\n  cut() {}\\n}\\n\\nclass Muffin extends Baking {\\n  heatUp() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class Baking {\\n  bake() {}\\n  decorate() {}\\n}\\n\\nclass PieceOfCake extends Baking {\\n  cut() {}\\n}\\n\\nclass Muffin extends Baking {\\n  heatUp() {}\\n}\\n\\nclass Salad {\\n  mixed() {}\\n  decorate() {}\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"The Duplication by Necessity Problem\\\" showNumbers 1:17\",\n    \"title\": \"\\\"The\",\n    \"Duplication\": true,\n    \"by\": true,\n    \"Necessity\": true,\n    \"Problem\\\"\": true,\n    \"showNumbers\": true,\n    \"1:17\": true\n  }), \"class Baking {\\n  bake() {}\\n  decorate() {}\\n}\\n\\nclass PieceOfCake extends Baking {\\n  cut() {}\\n}\\n\\nclass Muffin extends Baking {\\n  heatUp() {}\\n}\\n\\nclass Salad {\\n  mixed() {}\\n  decorate() {}\\n}\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Factory Function\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Factory function to dowolna funkcja, kt\\xF3ra nie jest klas\\u0105 ani konstruktorem, kt\\xF3ra zwraca (prawdopodobnie nowy) obiekt\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Composition\\\" showNumbers\",\n    \"title\": \"\\\"Composition\\\"\",\n    \"showNumbers\": true\n  }), \"const bakable = (state) => ({\\n  bake: () => console.log(`baking new ${state.type}`),\\n});\\n\\nconst decorable = (state) => ({\\n  decorate: () => console.log(`decorating new ${state.name}`),\\n});\\n\\nconst cutable = (state) => ({\\n  cut: () => console.log(`cuting new ${state.name}`),\\n});\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Factory Function\\\" showNumbers\",\n    \"title\": \"\\\"Factory\",\n    \"Function\\\"\": true,\n    \"showNumbers\": true\n  }), \"const bakable = (state) => ({\\n  bake: () => console.log(`baking new ${state.type}`),\\n});\\n\\nconst decorable = (state) => ({\\n  decorate: () => console.log(`decorating new ${state.name}`),\\n});\\n\\nconst cutable = (state) => ({\\n  cut: () => console.log(`cuting new ${state.name}`),\\n});\\n\\nconst pieceOfCake = (name, type) => {\\n  const state = { name, type };\\n\\n  return Object.assign({}, bakable(state), decorable(state), cutable(state));\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Factory Function\\\" showNumbers\",\n    \"title\": \"\\\"Factory\",\n    \"Function\\\"\": true,\n    \"showNumbers\": true\n  }), \"const bakable = (state) => ({\\n  bake: () => console.log(`baking new ${state.type}`),\\n});\\n\\nconst decorable = (state) => ({\\n  decorate: () => console.log(`decorating new ${state.name}`),\\n});\\n\\nconst cutable = (state) => ({\\n  cut: () => console.log(`cuting new ${state.name}`),\\n});\\n\\nconst pieceOfCake = (name, type) => {\\n  const state = { name, type };\\n\\n  return Object.assign({}, bakable(state), decorable(state), cutable(state));\\n};\\n\\nconst newPiece = pieceOfCake('chocolate cake' 'cake');\\nnewPiece.bake();\\nnewPiece.decorate();\\nnewPiece.cut();\\n\")))), mdx(\"hr\", null), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/1.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n\\n  getItems() {\\n    return this.items;\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n\\n  getItems() {\\n    return this.items;\\n  }\\n}\\n\\nconst numbers = new List()\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n\\n  getItems() {\\n    return this.items;\\n  }\\n}\\n\\nconst numbers = new List()\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems();\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n\\n  getItems() {\\n    return this.items;\\n  }\\n}\\n\\nconst numbers = new List()\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems();\\nnumbers.items;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"class List {\\n  items = []\\n\\n  addItem(item) {\\n    this.items.push(item)\\n  }\\n\\n  getItems() {\\n    return this.items;\\n  }\\n}\\n\\nconst numbers = new List()\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems();\\nnumbers.items;\\n\\nconst button = document.querySelector('button');\\nbutton.addEventListener('click', numbers.getItems) // undefined\\nbutton.addEventListener('click', numbers.getItems.bind(this)) // [1,2]\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Wady\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Brak mo\\u017Cliwo\\u015Bci enkapsulacji\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Problematyczne s\\u0142owo kluczowe this\")), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const list = () => {\\n  const items = [];\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const list = () => {\\n  const items = [];\\n\\n  return { \\n    addItem: (item) => items.push(item),\\n    getItems: () => items,\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const list = () => {\\n  const items = [];\\n\\n  return { \\n    addItem: (item) => items.push(item),\\n    getItems: () => items,\\n  }\\n}\\n\\nconst numbers = list();\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems(); // [1,2]\\nnumber.items; // undefined\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const list = () => {\\n  const items = [];\\n\\n  return { \\n    addItem: (item) => items.push(item),\\n    getItems: () => items,\\n  }\\n}\\n\\nconst numbers = list();\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems(); // [1,2]\\nnumber.items; // undefined\\nnumbers.addItem = '';\\nnumbers.addItem(3) // numbers.addItem is not a function\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const list = () => {\\n  const items = [];\\n\\n  return Object.freeze({ \\n    addItem: (item) => items.push(item),\\n    getItems: () => items,\\n  })\\n}\\n\\nconst numbers = list();\\nnumbers.addItem(1);\\nnumbers.addItem(2);\\nnumbers.getItems(); // [1,2]\\nnumbers.items; // undefined\\nnumbers.addItem = '';\\nnumbers.addItem(3)\\nnumbers.getItems() // [1,2,3]\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Czym jest map ?\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"W wielu j\\u0119zykach programowania map jest nazw\\u0105 funkcji wy\\u017Cszego rz\\u0119du, kt\\xF3ra stosuje dan\\u0105 funkcj\\u0119 do ka\\u017Cdego elementu funktora\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5 -> 10\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[10]\", \" -> \", \"[20]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{a: 20} -> {a: 40}\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Czym jest flatMap ?\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Jest tym samym co map, z dodatkow\\u0105 mo\\u017Cliwo\\u015Bci\\u0105 sp\\u0142aszczania\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", \"[5]\", \", \", \"[5]\", \"] -> \", \"[10, 10]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"{a: {b: 5} -> {'a.b': 5}\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Object in context\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Array(a)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Observable(b)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Promise(c)\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Funktory\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Struktura danych, na kt\\xF3rej mo\\u017Cesz mapowa\\u0107 funkcje w celu pobrania warto\\u015Bci z kontenera, ich modyfikacji, a nast\\u0119pnie w\\u0142o\\u017Cenia z powrotem do kontenera.\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"functor\\\" showNumbers\",\n    \"title\": \"\\\"functor\\\"\",\n    \"showNumbers\": true\n  }), \"const array = [1,2,3,4];\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"functor\\\" showNumbers\",\n    \"title\": \"\\\"functor\\\"\",\n    \"showNumbers\": true\n  }), \"const array = [1,2,3,4];\\nconst addOne = (value) => value + 1;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"functor\\\" showNumbers\",\n    \"title\": \"\\\"functor\\\"\",\n    \"showNumbers\": true\n  }), \"const array = [1,2,3,4];\\nconst addOne = (value) => value + 1;\\nconst arrayMap = array.map(addOne);\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"#1 Indentity\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: theme,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const sameArray = array.map((v) => v);\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"#2 Composition\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \" const double = (value) => value * 2;\\n const triple = (value) => value * 3;\\n\\n const composition = array.map((v) => triple(double(v)));\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \" const double = (value) => value * 2;\\n const triple = (value) => value * 3;\\n\\n const composition = array.map((v) => triple(double(v)));\\n const chaining = array.map((v) => double(v)).map((v) => triple(v));\\n\")))), mdx(\"hr\", null), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/2.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Jak stworzy\\u0107 functor\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\\n  const functor = (v) => ({})\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\\n  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n  })\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\\n  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n  })\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\\n  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n  })\\n\\n  const number = functor(2);\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const double = (value) => value * 2;\\n  const triple = (value) => value * 3;\\n\\n  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n  })\\n\\n  const number = functor(2);\\n  console.log(\\\"functor\\\", number.map(double).map(triple).valueOf());\\n\")))), mdx(\"hr\", null), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/3.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Monada\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Spos\\xF3b komponowania funkcji, kt\\xF3ry opr\\xF3cz warto\\u015Bci zwracanej wymagaj\\u0105 kontekstu\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n    inspect: () => `functor(${v})`,\\n  });\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n    inspect: () => `functor(${v})`,\\n  });\\n\\n  functor(5).map(double);\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"  const functor = (v) => ({\\n    map: (fn) => functor(fn(v)),\\n    valueOf: () => v,\\n    inspect: () => `functor(${v})`,\\n  });\\n\\n  functor(5).map(double);\\n  // functor(5) -> functor(10)\\n\")))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Przykłady monad\\\" showNumbers\",\n    \"title\": \"\\\"Przykłady\",\n    \"monad\\\"\": true,\n    \"showNumbers\": true\n  }), \"  [1, 2, 3, 4].flatMap((v) => [v * 2])\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Przykłady monad\\\" showNumbers\",\n    \"title\": \"\\\"Przykłady\",\n    \"monad\\\"\": true,\n    \"showNumbers\": true\n  }), \"  [1, 2, 3, 4].flatMap((v) => [v * 2])\\n\\n  const promise = new Promise((res) => setTimeout(() => res(\\\"done\\\"), 500));\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=\\\"Przykłady monad\\\" showNumbers\",\n    \"title\": \"\\\"Przykłady\",\n    \"monad\\\"\": true,\n    \"showNumbers\": true\n  }), \"  [1, 2, 3, 4].flatMap((v) => [v * 2])\\n\\n  const promise = new Promise((res) => setTimeout(() => res(\\\"done\\\"), 500));\\n  promise.then((data) => console.log(data));\\n\")))), mdx(\"hr\", null), mdx(\"h1\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Jak w rzeczywisto\\u015Bci dzia\\u0142a promise\"), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const promise = new Promise((res) => setTimeout(() => res(\\\"done\\\"), 500));\\npromise.then((data) => console.log(data))\\n\"))), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Promise(Promise('done')) w calbacku tych funkcji mamy dost\\u0119p do warto\\u015Bci\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const promise2 = promise.then((data) => data).then((data) => console.log(data));\\nconsole.log(\\\"this is promise\\\", Object.prototype.toString.call(promise2));\\n\"))), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/4.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Promise(Promise('done')) -> Promise('done') = flat map\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Przyk\\u0142ad w\\u0142asnego monada\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Funkcja do przeliczania stopni fahrenheita na celsjusza\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const fahrenheitToCelcius = (a) => (a - 32) * 0.5556;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const fahrenheitToCelcius = (a) => (a - 32) * 0.5556;\\n\\nconst value1 = 15;\\nconst value2 = null;\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const fahrenheitToCelcius = (a) => (a - 32) * 0.5556;\\n\\nconst value1 = 15;\\nconst value2 = null;\\n\\nconsole.log(\\\"good\\\", fahrenheitToCelcius(value1));\\nconsole.log(\\\"bad\\\", fahrenheitToCelcius(value2));\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Powstaje pewnien problem\"), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/5.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Wszystko dlatego \\u017Ce null jest zamieniany na 0\"), mdx(\"p\", {\n    style: {\n      \"textAlign\": \"center\"\n    }\n  }, \"Potrzebujemy czego\\u015B co zatrzyma kompozycje je\\u015Bli warto\\u015B\\u0107 jest nullem\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    theme: theme,\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const just = (v) => ({\\n  map: (fn) => just(fn(v)),\\n  flatMap: (fn) => fn(x),\\n  valueOf: () => v,\\n  inspect: () => `just(${v})`,\\n  type: \\\"just\\\",\\n});\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const just = (v) => ({\\n  map: (fn) => just(fn(v)),\\n  flatMap: (fn) => fn(x),\\n  valueOf: () => v,\\n  inspect: () => `just(${v})`,\\n  type: \\\"just\\\",\\n});\\n\\nconst nothing = () => ({\\n  map: (fn) => nothing(fn()),\\n  flatMap: (fn) => fn(),\\n  valueOf: () => nothing(),\\n  inspect: () => `nothing()`,\\n  type: \\\"nothing\\\",\\n});\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const just = (v) => ({\\n  map: (fn) => just(fn(v)),\\n  flatMap: (fn) => fn(x),\\n  valueOf: () => v,\\n  inspect: () => `just(${v})`,\\n  type: \\\"just\\\",\\n});\\n\\nconst nothing = () => ({\\n  map: (fn) => nothing(fn()),\\n  flatMap: (fn) => fn(),\\n  valueOf: () => nothing(),\\n  inspect: () => `nothing()`,\\n  type: \\\"nothing\\\",\\n});\\n\\nconst maybeOf = (x) => (!x || x.type === \\\"nothing\\\" ? nothing() : just(x));\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const just = (v) => ({\\n  map: (fn) => just(fn(v)),\\n  flatMap: (fn) => fn(x),\\n  valueOf: () => v,\\n  inspect: () => `just(${v})`,\\n  type: \\\"just\\\",\\n});\\n\\nconst nothing = () => ({\\n  map: (fn) => nothing(fn()),\\n  flatMap: (fn) => fn(),\\n  valueOf: () => nothing(),\\n  inspect: () => `nothing()`,\\n  type: \\\"nothing\\\",\\n});\\n\\nconst maybeOf = (x) => (!x || x.type === \\\"nothing\\\" ? nothing() : just(x));\\n\\nconst maybe = {\\n  of: maybeOf,\\n};\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"showNumbers\",\n    \"showNumbers\": true\n  }), \"const just = (v) => ({\\n  map: (fn) => just(fn(v)),\\n  flatMap: (fn) => fn(x),\\n  valueOf: () => v,\\n  inspect: () => `just(${v})`,\\n  type: \\\"just\\\",\\n});\\n\\nconst nothing = () => ({\\n  map: (fn) => nothing(fn()),\\n  flatMap: (fn) => fn(),\\n  valueOf: () => nothing(),\\n  inspect: () => `nothing()`,\\n  type: \\\"nothing\\\",\\n});\\n\\nconst maybeOf = (x) => (!x || x.type === \\\"nothing\\\" ? nothing() : just(x));\\n\\nconst maybe = {\\n  of: maybeOf,\\n};\\n\\nconst temp1 = maybe.of(value1).map(fahrenheitToCelcius).inspect();\\nconst temp2 = maybe.of(value2).map(fahrenheitToCelcius).map(double).inspect();\\nconsole.log(temp1);\\nconsole.log(temp2);\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"Teraz oba wyniki s\\u0105 poprawne\"), mdx(Image, {\n    src: \"https://raw.githubusercontent.com/Affee360/factory-functions-funktory-monady/master/images/6.png\",\n    style: {\n      \"backgroundImage\": \"contain\",\n      \"backgroundSize\": \"800px auto\"\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Pytania ? \\uD83D\\uDE00\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"b661594a-2036-51f4-9b8f-1f0f63e8b70d","slug":"","title":"Cześć 👋"}}}